{"version":3,"sources":["components/common/loader/formsControls.js","components/common/loader/formsControls.module.css","Utils/Validator/validator.js","components/Hoc/withAuthRedirect.js","components/Dialog/dialog.module.css","components/Dialog/MessageFrom/messageFrom.js","components/Dialog/Message/message.js","components/Dialog/dialog.js","components/Dialog/dialogContainer.js"],"names":["FormControls","input","meta","props","touched","error","className","s","item","formControl","children","Input","restProps","Textarea","TwinsField","placeholder","name","component","value","type","validate","module","exports","required","undefined","MaxLengthFuncCreator","maxLength","length","mapToStateProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","MessageFrom","id","path","dialog","Message","message","maxLength20","DialogFormRedux","reduxForm","form","onSubmit","handleSubmit","dialogs","dialogsItems","messFromBuilder","messages","messContentBuilder","Dialog","dialogPage","messFrom","map","m","messContent","content","formData","addMessage","compose","dispatch","text","addMessageActionCreator"],"mappings":"6QAGaA,EAAe,SAAC,GAA8B,EAA5BC,MAA6B,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,gCACzD,OACE,6BACGD,EAAKE,SAAWF,EAAKG,OACpB,yBAAKC,UAAS,gCAA2BC,IAAEC,OACzC,8BAAON,EAAKG,QAGhB,yBACEC,UACEC,IAAEE,YAAc,KAAOP,EAAKE,SAAWF,EAAKG,MAAQE,IAAEF,MAAQ,KAG/DF,EAAMO,YAMFC,EAAQ,SAACR,GAAW,IACxBF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KADgB,YACMC,EADN,mBAE9B,OACE,kBAACH,EAAiBG,EAChB,2CAAWS,EAAeX,MAInBY,EAAW,SAACV,GAAW,IAC3BF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KADmB,YACGC,EADH,mBAEjC,OACE,kBAACH,EAAiBG,EAChB,8CAAcS,EAAeX,MAKtBa,EAAa,SAACC,EAAYC,EAAKC,EAAlB,EAA+BC,EAAMC,GAAS,eACtE,OACE,kBAAC,IAAD,CAAOJ,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EAAWG,SAAU,GAAIF,MAAOA,EAAOC,KAAMA,M,oBCxCzGE,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,KAAO,8B,iCCD/G,oEAAO,IAAMC,EAAW,SAACL,GACrB,OAAOA,OAAQM,EAAY,qBAGlBC,EAAuB,SAACC,GAAD,OAAe,SAACR,GAChD,GAAGA,EAAMS,OAASD,EAAW,MAAM,8BAAN,OAAqCA,EAArC,e,+ICD7BE,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACrCC,EADoC,iLAInC,OAAKC,KAAKhC,MAAM2B,OACT,kBAACG,EAAcE,KAAKhC,OADI,kBAAC,IAAD,CAAUiC,GAAI,eAJV,GACVC,IAAMJ,WASvC,OADiCK,YAAQV,EAARU,CAAyBJ,K,oBClB9Db,EAAOC,QAAU,CAAC,QAAU,wBAAwB,aAAe,6BAA6B,SAAW,yBAAyB,OAAS,yB,8FCW9HiB,EATK,SAAC,GAAe,IAAdC,EAAa,EAAbA,GAAGxB,EAAU,EAAVA,KACjByB,EAAM,YAAmBD,EAC7B,OACI,yBAAKlC,UAAWC,IAAEmC,QACd,kBAAC,IAAD,CAASN,GAAIK,GAAOzB,KCCjB2B,EANC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACA,yBAAKtC,UAAWC,IAAEmC,QAASE,I,2BCI3BC,EAAcpB,YAAqB,IAmBnCqB,EAAkBC,YAAU,CAACC,KAAM,cAAjBD,EAjBH,SAAC5C,GAChB,OACI,0BAAM8C,SAAU9C,EAAM+C,aAAc5C,UAAWC,IAAE4C,SAC7C,yBAAK7C,UAAWC,IAAE6C,cACZjD,EAAMkD,iBAEZ,yBAAK/C,UAAWC,IAAE+C,UACZnD,EAAMoD,mBACR,6BACKzC,YAAW,gBAAiB,UAAWD,IAAS,CAACU,IAAUsB,GAAa,KAAK,MAC9E,qDAuBLW,EAdA,SAACrD,GACZ,IAKAkD,EAAiBlD,EAAMsD,WAAWC,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAa5C,KAAM4C,EAAE5C,KAAMwB,GAAIoB,EAAEpB,QACrFe,EAAoBpD,EAAMsD,WAAWI,YAAYF,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAShB,QAASgB,EAAEE,aAC9E,OACI,kBAAChB,EAAD,CAAiBG,SARN,SAACc,GACZ5D,EAAM6D,WAAWD,EAASnB,UAOWa,WAAYtD,EAAMsD,WACtDF,mBAAoBA,EAAqBF,gBAAiBA,K,yBCjBnDY,sBACd3B,aAfoB,SAACT,GACrB,MAAO,CACL4B,WAAY5B,EAAM4B,eAIG,SAACS,GACxB,MAAO,CACLF,WAAY,SAACG,GACXD,EAASE,YAAwBD,SAOrCnC,IAFciC,CAGdT","file":"static/js/6.617cc61e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./formsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\nexport const FormControls = ({ input, meta, ...props }) => {\r\n  return (\r\n    <div>\r\n      {meta.touched && meta.error && (\r\n        <div className={`alert-danger p-2 mb-1 ${s.item}`}>\r\n          <span>{meta.error}</span>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={\r\n          s.formControl + \" \" + (meta.touched && meta.error ? s.error : \"\")\r\n        }\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n    let {input, meta, ...restProps} = props\r\n  return (\r\n    <FormControls {...props}>\r\n      <input {...restProps} {...input} />\r\n    </FormControls>\r\n  );\r\n};\r\nexport const Textarea = (props) => {\r\n    let {input, meta, ...restProps} = props\r\n  return (\r\n    <FormControls {...props}>\r\n      <textarea {...restProps} {...input} />\r\n    </FormControls>\r\n  );\r\n};\r\n\r\nexport const TwinsField = (placeholder,name,component,[],value,type) => {\r\n  return(\r\n    <Field placeholder={placeholder} name={name} component={component} validate={[]} value={value} type={type} />\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2DFAA\",\"error\":\"formsControls_error__1bhKG\",\"item\":\"formsControls_item__EUBPm\"};","export const required = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const MaxLengthFuncCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength) return `Max length is no more than ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapToStateProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n     class RedirectComponent extends React.Component {\r\n       \r\n         render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n            \r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapToStateProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialog_dialogs__28CEq\",\"dialogsItems\":\"dialog_dialogsItems__3xKf1\",\"messages\":\"dialog_messages__1smAi\",\"dialog\":\"dialog_dialog__1EXzQ\"};","import React from 'react'\r\nimport s from './../dialog.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nconst MessageFrom = ({id,name}) => {\r\n    let path= '/message/' + '' + id\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageFrom","import React from 'react'\r\nimport s from './../dialog.module.css'\r\nconst Message = ({message}) => {\r\n    return(\r\n    <div className={s.dialog}>{message}</div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './dialog.module.css'\r\nimport MessageFrom from './MessageFrom/messageFrom'\r\nimport Message from './Message/message'\r\nimport { reduxForm } from 'redux-form'\r\nimport { Textarea, TwinsField } from '../common/loader/formsControls'\r\nimport { MaxLengthFuncCreator, required } from '../../Utils/Validator/validator'\r\n\r\nlet maxLength20 = MaxLengthFuncCreator(20)\r\n\r\nconst DialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { props.messFromBuilder }\r\n            </div>\r\n            <div className={s.messages}>\r\n                { props.messContentBuilder }\r\n                <div> \r\n                    {TwinsField(\"Enter message\", \"message\", Textarea,[required, maxLength20],null,null)}\r\n                    <button>Add message</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet DialogFormRedux = reduxForm({form: \"DialogForm\"})(DialogForm)\r\n\r\nconst Dialog = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.addMessage(formData.message)\r\n    }\r\n   \r\n   \r\nlet messFromBuilder= props.dialogPage.messFrom.map(m => <MessageFrom name={m.name} id={m.id} />)\r\nlet messContentBuilder= props.dialogPage.messContent.map(m => <Message message={m.content} /> )\r\n    return (\r\n        <DialogFormRedux onSubmit={onSubmit} dialogPage={props.dialogPage}\r\n         messContentBuilder={messContentBuilder}  messFromBuilder={messFromBuilder} />\r\n    )\r\n}\r\n\r\nexport default Dialog","import {\r\n  addMessageActionCreator} from \"../../redux/dialog-Reducer\";\r\nimport Dialog from \"./dialog\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../Hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return {\r\n    dialogPage: state.dialogPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (text) => {\r\n      dispatch(addMessageActionCreator(text));\r\n    }\r\n  }\r\n}\r\n\r\n export default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialog)"],"sourceRoot":""}