{"version":3,"sources":["components/common/loader/formsControls.js","components/common/loader/formsControls.module.css","Utils/Validator/validator.js","components/Login/login.js"],"names":["FormControls","input","meta","props","touched","error","className","s","item","formControl","children","Input","restProps","Textarea","TwinsField","placeholder","name","component","value","type","validate","module","exports","required","undefined","MaxLengthFuncCreator","maxLength","length","maxLength10","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","connect","state","isAuth","auth","loginThunk","to","formData","email","password","rememberMe"],"mappings":"6QAGaA,EAAe,SAAC,GAA8B,EAA5BC,MAA6B,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,gCACzD,OACE,6BACGD,EAAKE,SAAWF,EAAKG,OACpB,yBAAKC,UAAS,gCAA2BC,IAAEC,OACzC,8BAAON,EAAKG,QAGhB,yBACEC,UACEC,IAAEE,YAAc,KAAOP,EAAKE,SAAWF,EAAKG,MAAQE,IAAEF,MAAQ,KAG/DF,EAAMO,YAMFC,EAAQ,SAACR,GAAW,IACxBF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KADgB,YACMC,EADN,mBAE9B,OACE,kBAACH,EAAiBG,EAChB,2CAAWS,EAAeX,MAInBY,EAAW,SAACV,GAAW,IAC3BF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KADmB,YACGC,EADH,mBAEjC,OACE,kBAACH,EAAiBG,EAChB,8CAAcS,EAAeX,MAKtBa,EAAa,SAACC,EAAYC,EAAKC,EAAlB,EAA+BC,EAAMC,GAAS,eACtE,OACE,kBAAC,IAAD,CAAOJ,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EAAWG,SAAU,GAAIF,MAAOA,EAAOC,KAAMA,M,oBCxCzGE,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,KAAO,8B,iCCD/G,oEAAO,IAAMC,EAAW,SAACL,GACrB,OAAOA,OAAQM,EAAY,qBAGlBC,EAAuB,SAACC,GAAD,OAAe,SAACR,GAChD,GAAGA,EAAMS,OAASD,EAAW,MAAM,8BAAN,OAAqCA,EAArC,e,iCCLjC,8EAQIE,EAAaH,YAAqB,IAwBhCI,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAtBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAc3B,EAAW,EAAXA,MAC9B,OACI,0BAAM4B,SAAUD,GACZ,6BACKlB,YAAW,QAAQ,QAAQH,IAAM,CAACY,IAAUK,GAAa,KAAK,OAEnE,6BACCd,YAAW,WAAW,WAAWH,IAAM,CAACY,IAAUK,GAAa,KAAK,aAErE,6BACCd,YAAW,KAAK,aAAaH,IAAM,GAAG,KAAK,YAD5C,gBAGA,6BACI,4BAAKN,IAET,6BACI,gDAyBD6B,uBAJO,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,gBAA1BJ,EAjBD,SAAC/B,GAIX,OAAGA,EAAMiC,OAAgB,kBAAC,IAAD,CAAUG,GAAI,aAEnC,6BACI,qCACA,kBAACV,EAAD,CAAgBI,SAPT,SAACO,GACZrC,EAAMmC,WAAWE,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.c6fe2773.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./formsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\nexport const FormControls = ({ input, meta, ...props }) => {\r\n  return (\r\n    <div>\r\n      {meta.touched && meta.error && (\r\n        <div className={`alert-danger p-2 mb-1 ${s.item}`}>\r\n          <span>{meta.error}</span>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={\r\n          s.formControl + \" \" + (meta.touched && meta.error ? s.error : \"\")\r\n        }\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n    let {input, meta, ...restProps} = props\r\n  return (\r\n    <FormControls {...props}>\r\n      <input {...restProps} {...input} />\r\n    </FormControls>\r\n  );\r\n};\r\nexport const Textarea = (props) => {\r\n    let {input, meta, ...restProps} = props\r\n  return (\r\n    <FormControls {...props}>\r\n      <textarea {...restProps} {...input} />\r\n    </FormControls>\r\n  );\r\n};\r\n\r\nexport const TwinsField = (placeholder,name,component,[],value,type) => {\r\n  return(\r\n    <Field placeholder={placeholder} name={name} component={component} validate={[]} value={value} type={type} />\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2DFAA\",\"error\":\"formsControls_error__1bhKG\",\"item\":\"formsControls_item__EUBPm\"};","export const required = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const MaxLengthFuncCreator = (maxLength) => (value) =>{\r\n    if(value.length > maxLength) return `Max length is no more than ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input, TwinsField } from '../common/loader/formsControls';\r\nimport { required, MaxLengthFuncCreator } from '../../Utils/Validator/validator';\r\nimport { loginThunk } from '../../redux/auth-Reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet maxLength10= MaxLengthFuncCreator(50)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {TwinsField(\"Email\",\"email\",Input,[required, maxLength10],null,null)}\r\n            </div>\r\n            <div>\r\n            {TwinsField(\"Password\",\"password\",Input,[required, maxLength10],null,\"password\")}\r\n            </div>\r\n            <div>\r\n            {TwinsField(null,\"rememberMe\",Input,[],null,\"checkbox\")} Remember me\r\n            </div>\r\n            <div>\r\n                <h3>{error}</h3>\r\n            </div>\r\n            <div>\r\n                <button>Sign in</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    let onSubmit = (formData) => {\r\n        props.loginThunk(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if(props.isAuth){ return <Redirect to={\"/profile\"} />}\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n\r\n}\r\nlet mapToStateProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapToStateProps,({loginThunk}))(Login)"],"sourceRoot":""}